{"version":3,"file":"static/js/872.268006c6.chunk.js","mappings":"oLAmHA,QA7GA,WAEE,MAAOA,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IAsE/C,OAjEAG,EAAAA,EAAAA,YAAU,KACUC,WAChB,MACMC,EADY,IAAIC,gBAAgBC,OAAOC,SAASC,QACjBC,IAAI,MAEzC,GAAKL,EAAL,CAWAH,EAAeG,GAEf,IACE,MACMM,SADwBC,EAAAA,EAAMC,KAvBlB,yCAuBwC,CAAEC,gBAAiBT,KAC9CU,KAAKC,gBAM9BC,SAD0BL,EAAAA,EAAMF,IAAI,2CAA2CC,MAC7CI,KAElCG,QAAgCC,QAAQC,IAC5CH,EAAcI,KAAIjB,UAChB,GAAIkB,EAASC,OAAQ,CACnB,MAAMC,QAAwBZ,EAAAA,EAAMC,KAlCxB,yCAkC8C,CAAEY,MAAOH,EAASI,WAAWC,aACvF,MAAO,IACFL,EACHM,oBAAqBJ,EAAgBT,KAAKD,gBAE9C,CACA,OAAO,IAAI,KAIff,EAAamB,EAAwBW,OAAOC,SAE9C,CAAE,MAAOC,GACPC,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,QACPC,KAAM,yCACLC,MAAK,KACN7B,OAAOC,SAAS6B,KAAO,GAAG,GAE9B,CArCA,MAREL,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,QACPC,KAAM,wCACLC,MAAK,KACN7B,OAAOC,SAAS6B,KAAO,GAAG,GAwC9B,EAGFC,EAAW,GACV,KAWDC,EAAAA,EAAAA,KAAA,OAAAC,UAEID,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBD,UAC7BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gEAA+DD,SAAA,EAC5ED,EAAAA,EAAAA,KAAA,MAAIE,UAAU,KAAID,SAAC,iBACnBD,EAAAA,EAAAA,KAAA,UAAQE,UAAU,iBAAiBE,QAf1BC,KACnBrC,OAAOC,SAAS6B,KAAO,GAAG,EAcyCG,SAAC,yBAI5DE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBD,EAAAA,EAAAA,KAAA,KAAGE,UAAU,cAAaD,SAAC,+BAC3BD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCD,SAC9C1C,EAAUuB,KAAKC,IACdiB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKD,UAClBD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAYD,UACzBE,EAAAA,EAAAA,MAAA,UACED,UAAU,uDACVE,QAASA,KAAME,OAvBRjB,EAuB4BN,EAASM,yBAtBhErB,OAAOC,SAAS6B,KAAO,cAAcpC,aAAuB2B,KADjCA,KAuB0D,EAAAY,SAAA,EAEjED,EAAAA,EAAAA,KAAA,OAAKO,IAAK,yBAAyBxB,EAASyB,SAAUC,IAAK1B,EAAS2B,UACpEV,EAAAA,EAAAA,KAAA,QAAAC,SAAOlB,EAAS2B,eAPI3B,EAASI,yBAmBrD,C","sources":["components/campanas.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './campanas.css';\r\n\r\nfunction App() {\r\n  //const [loading, setLoading] = useState(true);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [encryptedId, setEncryptedId] = useState('');\r\n  const decryptEndpoint = 'http://192.52.242.238:8000/api/decrypt';\r\n  const encryptEndpoint = 'http://192.52.242.238:8000/api/encrypt';\r\n  //const userRoleEndpoint = 'http://192.52.242.238:8000/api/usuarios?opcion=4';\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const encryptedIdFromUrl = urlParams.get('id');\r\n\r\n      if (!encryptedIdFromUrl) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'No se encontr칩 el ID del usuario',\r\n        }).then(() => {\r\n          window.location.href = '/';\r\n        });\r\n        return;\r\n      }\r\n\r\n      setEncryptedId(encryptedIdFromUrl);\r\n\r\n      try {\r\n        const decryptResponse = await axios.post(decryptEndpoint, { encrypted_value: encryptedIdFromUrl });\r\n        const userId = decryptResponse.data.decrypted_value;\r\n\r\n        //const userResponse = await axios.post(userRoleEndpoint, { id_usuario: userId });\r\n        //const userRole = userResponse.data[0]?.ID_ROL;\r\n\r\n        const campaignsResponse = await axios.get(`http://192.52.242.238:8000/api/campanas/${userId}`);\r\n        const campaignsData = campaignsResponse.data;\r\n\r\n        const campaignsWithEncryption = await Promise.all(\r\n          campaignsData.map(async (campaign) => {\r\n            if (campaign.estado) {\r\n              const encryptResponse = await axios.post(encryptEndpoint, { value: campaign.id_campana.toString() });\r\n              return {\r\n                ...campaign,\r\n                encryptedCampaignId: encryptResponse.data.encrypted_value,\r\n              };\r\n            }\r\n            return null;\r\n          })\r\n        );\r\n\r\n        setCampaigns(campaignsWithEncryption.filter(Boolean));\r\n        //setLoading(false);\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Hubo un problema al cargar los datos',\r\n        }).then(() => {\r\n          window.location.href = '/';\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const handleCampaignClick = (encryptedCampaignId) => {\r\n    window.location.href = `modulos?id=${encryptedId}&campana=${encryptedCampaignId}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <div className=\"container mt-5\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n              <h1 className=\"h3\">Campa침as</h1>\r\n              <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n                Cerrar Sesi칩n\r\n              </button>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p className=\"text-center\">Selecciona una campa침a</p>\r\n              <div className=\"row row-cols-1 row-cols-md-2 g-4\">\r\n                {campaigns.map((campaign) => (\r\n                  <div className=\"col\" key={campaign.id_campana}>\r\n                    <div className=\"card h-100\">\r\n                      <button\r\n                        className=\"btn btn-light btn-campaign d-flex align-items-center\"\r\n                        onClick={() => handleCampaignClick(campaign.encryptedCampaignId)}\r\n                      >\r\n                        <img src={`data:image/png;base64,${campaign.imagen}`} alt={campaign.nombre} />\r\n                        <span>{campaign.nombre}</span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"names":["campaigns","setCampaigns","useState","encryptedId","setEncryptedId","useEffect","async","encryptedIdFromUrl","URLSearchParams","window","location","search","get","userId","axios","post","encrypted_value","data","decrypted_value","campaignsData","campaignsWithEncryption","Promise","all","map","campaign","estado","encryptResponse","value","id_campana","toString","encryptedCampaignId","filter","Boolean","error","Swal","icon","title","text","then","href","fetchData","_jsx","children","className","_jsxs","onClick","handleLogout","handleCampaignClick","src","imagen","alt","nombre"],"sourceRoot":""}