{"version":3,"file":"static/js/87.13d4b678.chunk.js","mappings":"kLAmHA,QA7GA,WAEE,MAAOA,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAkBC,IAAuBJ,EAAAA,EAAAA,UAAS,IACnDK,EAAkB,yCAsExB,OApEAC,EAAAA,EAAAA,YAAU,KACUC,WAChB,MAAMC,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAChDC,EAAqBL,EAAUM,IAAI,MACnCC,EAA0BP,EAAUM,IAAI,WAE9C,GAAKD,GAAuBE,EAA5B,CAaAb,EAAeW,GACfT,EAAoBW,GAEpB,IACE,MAAMC,QAA0BC,EAAAA,EAAMC,KAAKb,EAAiB,CAAEc,gBAAiBN,IACzEO,QAA+BH,EAAAA,EAAMC,KAAKb,EAAiB,CAAEc,gBAAiBJ,IAE9EM,EAASL,EAAkBM,KAAKC,gBAChCC,EAAYJ,EAAuBE,KAAKC,gBAExCE,QAAyBR,EAAAA,EAAMC,KACnC,yDACA,CAAEQ,WAAYL,EAAQM,WAAYH,IAGpCzB,EAAW0B,EAAiBH,KAE9B,CAAE,MAAOM,GACPC,QAAQD,MAAM,kCAAgCA,GAC9CE,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,QACPC,KAAM,8CACLC,MAAK,KACNxB,OAAOC,SAASwB,KAAO,GAAG,GAE9B,CA5BA,MAVEL,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,QACPC,KAAOpB,EAEH,wCADA,wCAEHqB,MAAK,KACNxB,OAAOC,SAASwB,KAAO,GAAG,GA+B9B,EAGFC,EAAW,GACV,KAoBDC,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBD,UAC7BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gEAA+DD,SAAA,EAC5ED,EAAAA,EAAAA,KAAA,MAAIE,UAAU,KAAID,SAAC,aACnBD,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kBAAkBE,QAV3BC,KACnBhC,OAAOC,SAASwB,KAAO,iBAAiBlC,GAAa,EASeqC,SAAC,wCAI7DE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBD,EAAAA,EAAAA,KAAA,KAAGE,UAAU,cAAaD,SAAC,0BAC3BD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCD,SAC9CxC,EAAQ6C,KAAKC,IACZP,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKD,UAClBD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAYD,UACzBE,EAAAA,EAAAA,MAAA,UACED,UAAU,uDACVE,QAASA,IAnCJI,KACzB,MAQMC,EARS,CACb,EAAG,qBAAqB7C,aAAuBE,IAC/C,EAAG,mBAAmBF,aAAuBE,IAC7C,EAAG,uBAAuBF,aAAuBE,IACjD,EAAG,yBAAyBF,aAAuBE,IACnD,EAAG,qCAAqCF,aAAuBE,IAC/D,EAAG,uBAAuBF,aAAuBE,KAExB0C,IAAa,IACxCnC,OAAOC,SAASwB,KAAOW,CAAW,EAyBCC,CAAkBH,EAAOI,WAAWV,SAAA,EAEnDD,EAAAA,EAAAA,KAAA,OAAKY,IAAK,yBAAyBL,EAAOM,SAAUC,IAAKP,EAAOQ,UAChEf,EAAAA,EAAAA,KAAA,QAAAC,SAAOM,EAAOQ,eAPMR,EAAOI,wBAkBnD,C","sources":["components/modulos.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './modulos.css';\r\n\r\nfunction Modulos() {\r\n  //const [loading, setLoading] = useState(true);\r\n  const [modules, setModules] = useState([]);\r\n  const [encryptedId, setEncryptedId] = useState('');\r\n  const [encryptedCampana, setEncryptedCampana] = useState('');\r\n  const decryptEndpoint = 'http://192.52.242.238:8000/api/decrypt';\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const encryptedIdFromUrl = urlParams.get('id');\r\n      const encryptedCampanaFromUrl = urlParams.get('campana');\r\n\r\n      if (!encryptedIdFromUrl || !encryptedCampanaFromUrl) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: !encryptedIdFromUrl\r\n            ? 'No se encontró el ID del usuario'\r\n            : 'No se encontró el ID de la campana',\r\n        }).then(() => {\r\n          window.location.href = '/';\r\n        });\r\n        return;\r\n      }\r\n\r\n      setEncryptedId(encryptedIdFromUrl);\r\n      setEncryptedCampana(encryptedCampanaFromUrl);\r\n\r\n      try {\r\n        const decryptResponseId = await axios.post(decryptEndpoint, { encrypted_value: encryptedIdFromUrl });\r\n        const decryptResponseCampana = await axios.post(decryptEndpoint, { encrypted_value: encryptedCampanaFromUrl });\r\n\r\n        const userId = decryptResponseId.data.decrypted_value;\r\n        const CampanaId = decryptResponseCampana.data.decrypted_value;\r\n\r\n        const campaignResponse = await axios.post(\r\n          'http://192.52.242.238:8000/api/modulos_usuarios_select',\r\n          { id_usuario: userId, id_campana: CampanaId }\r\n        );\r\n\r\n        setModules(campaignResponse.data);\r\n        //setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error al cargar los módulos:', error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Hubo un problema al cargar los módulos',\r\n        }).then(() => {\r\n          window.location.href = '/';\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleModuleClick = (moduleId) => {\r\n    const urlMap = {\r\n      1: `carga_campanas?id=${encryptedId}&campana=${encryptedCampana}`,\r\n      2: `carga_saldos?id=${encryptedId}&campana=${encryptedCampana}`,\r\n      3: `carga_tipologias?id=${encryptedId}&campana=${encryptedCampana}`,\r\n      4: `gestiones_asesores?id=${encryptedId}&campana=${encryptedCampana}`,\r\n      5: `carga_tipologias_subtipologias?id=${encryptedId}&campana=${encryptedCampana}`,\r\n      6: `carga_descuentos?id=${encryptedId}&campana=${encryptedCampana}`,\r\n    };\r\n    const redirectUrl = urlMap[moduleId] || '/';\r\n    window.location.href = redirectUrl;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.location.href = `./campanas?id=${encryptedId}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"container mt-5\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n              <h1 className=\"h3\">Modulos</h1>\r\n              <button className=\"btn btn-warning\" onClick={handleLogout}>\r\n                Regresar a panel de campañas\r\n              </button>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p className=\"text-center\">Selecciona un Modulo</p>\r\n              <div className=\"row row-cols-1 row-cols-md-2 g-4\">\r\n                {modules.map((module) => (\r\n                  <div className=\"col\" key={module.ID_MODULO}>\r\n                    <div className=\"card h-100\">\r\n                      <button\r\n                        className=\"btn btn-light btn-campaign d-flex align-items-center\"\r\n                        onClick={() => handleModuleClick(module.ID_MODULO)}\r\n                      >\r\n                        <img src={`data:image/png;base64,${module.IMAGEN}`} alt={module.NOMBRE} />\r\n                        <span>{module.NOMBRE}</span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modulos;\r\n\r\n"],"names":["modules","setModules","useState","encryptedId","setEncryptedId","encryptedCampana","setEncryptedCampana","decryptEndpoint","useEffect","async","urlParams","URLSearchParams","window","location","search","encryptedIdFromUrl","get","encryptedCampanaFromUrl","decryptResponseId","axios","post","encrypted_value","decryptResponseCampana","userId","data","decrypted_value","CampanaId","campaignResponse","id_usuario","id_campana","error","console","Swal","icon","title","text","then","href","fetchData","_jsx","children","className","_jsxs","onClick","handleLogout","map","module","moduleId","redirectUrl","handleModuleClick","ID_MODULO","src","IMAGEN","alt","NOMBRE"],"sourceRoot":""}